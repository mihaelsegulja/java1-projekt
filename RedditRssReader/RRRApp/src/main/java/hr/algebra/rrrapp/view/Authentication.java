/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.algebra.rrrapp.view;

import hr.algebra.dao.RepositoryFactory;
import hr.algebra.dao.UserRepository;
import hr.algebra.dao.model.User;
import hr.algebra.dao.model.UserRole;
import hr.algebra.utilities.MessageUtils;
import hr.algebra.utilities.PasswordUtils;
import java.util.Optional;
import java.util.function.Consumer;

/**
 *
 * @author Mihael≈†egulja
 */
public class Authentication extends javax.swing.JPanel {

    /**
     * Creates new form Authentication
     */
    public Authentication() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfAuthUsername = new javax.swing.JTextField();
        pfAuthPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        lbAuthUsername = new javax.swing.JLabel();
        lbAuthPassword = new javax.swing.JLabel();
        lbAuthPasswordError = new javax.swing.JLabel();
        lbAuthUsernameError = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        lbAuthUsername.setText("Username");

        lbAuthPassword.setText("Password");

        lbAuthPasswordError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbAuthPasswordError.setForeground(new java.awt.Color(255, 0, 0));
        lbAuthPasswordError.setText("X");

        lbAuthUsernameError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbAuthUsernameError.setForeground(new java.awt.Color(255, 0, 0));
        lbAuthUsernameError.setText("X");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbAuthPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAuthUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pfAuthPassword)
                    .addComponent(tfAuthUsername)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAuthPasswordError, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAuthUsernameError, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(226, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(lbAuthUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAuthUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAuthUsernameError, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbAuthPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfAuthPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAuthPasswordError, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(155, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String username = tfAuthUsername.getText().trim();
        String pass = new String(pfAuthPassword.getPassword());
        
        try {
            Optional<User> existingUser = userRepo.selectUsers().stream()
                    .filter(user -> username.equals(user.getUsername()))
                    .findFirst();
            
            if(!existingUser.isPresent()){
                MessageUtils.showErrorMessage("Error", "User does not exist");
            }
            
            User user = existingUser.get();
            boolean validPass = PasswordUtils.verifyPassword(pass, user.getPasswordHash(), user.getPasswordSalt());
            
            if (!validPass){
                MessageUtils.showErrorMessage("Error", "Invalid password");
            }
            
            onLoginSuccess.accept(user);
            
        } catch (Exception e) {
            MessageUtils.showErrorMessage("Error", "Failed to log in");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        String username = tfAuthUsername.getText().trim();
        String pass = new String(pfAuthPassword.getPassword());
        
        try {
            String[] hashAndSalt = PasswordUtils.createHashedPassword(pass);
            
            User user = new User(
                username, 
                hashAndSalt[0], 
                hashAndSalt[1], 
                UserRole.USER.getUserRole()
            );
            
            userRepo.createUser(user);
            MessageUtils.showInformationMessage("Success", "Successfully registered");
        } catch (Exception e) {
            MessageUtils.showErrorMessage("Error", "Failed to register");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        init();
    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lbAuthPassword;
    private javax.swing.JLabel lbAuthPasswordError;
    private javax.swing.JLabel lbAuthUsername;
    private javax.swing.JLabel lbAuthUsernameError;
    private javax.swing.JPasswordField pfAuthPassword;
    private javax.swing.JTextField tfAuthUsername;
    // End of variables declaration//GEN-END:variables

    private UserRepository userRepo;
    private Consumer<User> onLoginSuccess;
    
    public void setOnLoginSuccess(Consumer<User> callback) {
        this.onLoginSuccess = callback;
    }

    private void init() {
        try {
            userRepo = RepositoryFactory.getUserRepo();
        } catch (Exception e) {
            MessageUtils.showErrorMessage("Unrecoverable error", "Cannot initiate the form");
        }
    }
}
